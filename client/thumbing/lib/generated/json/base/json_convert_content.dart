// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:thumbing/data/model/reponse/base_result_entity.dart';
import 'package:thumbing/generated/json/base_result_entity_helper.dart';
import 'package:thumbing/data/model/personal/output/personal_entity.dart';
import 'package:thumbing/generated/json/personal_entity_helper.dart';
import 'package:thumbing/data/model/personal/output/personal_configuration_entity.dart';
import 'package:thumbing/generated/json/personal_configuration_entity_helper.dart';
import 'package:thumbing/data/model/personal/input/create_personal_input_entity.dart';
import 'package:thumbing/generated/json/create_personal_input_entity_helper.dart';
import 'package:thumbing/data/model/account/output/account_entity.dart';
import 'package:thumbing/generated/json/account_entity_helper.dart';
import 'package:thumbing/data/model/account/input/check_unique_input_entity.dart';
import 'package:thumbing/generated/json/check_unique_input_entity_helper.dart';
import 'package:thumbing/data/model/account/input/sign_up_input_entity.dart';
import 'package:thumbing/generated/json/sign_up_input_entity_helper.dart';
import 'package:thumbing/data/model/personal/input/update_personal_input_entity.dart';
import 'package:thumbing/generated/json/update_personal_input_entity_helper.dart';
import 'package:thumbing/data/model/account/input/change_password_input_entity.dart';
import 'package:thumbing/generated/json/change_password_input_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BaseResultEntity:
			return baseResultEntityFromJson(data as BaseResultEntity, json) as T;			case PersonalEntity:
			return personalEntityFromJson(data as PersonalEntity, json) as T;			case PersonalInterest:
			return personalInterestFromJson(data as PersonalInterest, json) as T;			case PersonalJob:
			return personalJobFromJson(data as PersonalJob, json) as T;			case PersonalOccupation:
			return personalOccupationFromJson(data as PersonalOccupation, json) as T;			case PersonalConfigurationEntity:
			return personalConfigurationEntityFromJson(data as PersonalConfigurationEntity, json) as T;			case PersonalConfigurationInterest:
			return personalConfigurationInterestFromJson(data as PersonalConfigurationInterest, json) as T;			case PersonalConfigurationJob:
			return personalConfigurationJobFromJson(data as PersonalConfigurationJob, json) as T;			case PersonalConfigurationOccupation:
			return personalConfigurationOccupationFromJson(data as PersonalConfigurationOccupation, json) as T;			case CreatePersonalInputEntity:
			return createPersonalInputEntityFromJson(data as CreatePersonalInputEntity, json) as T;			case CreatePersonalInputInterest:
			return createPersonalInputInterestFromJson(data as CreatePersonalInputInterest, json) as T;			case CreatePersonalInputJob:
			return createPersonalInputJobFromJson(data as CreatePersonalInputJob, json) as T;			case CreatePersonalInputOccupation:
			return createPersonalInputOccupationFromJson(data as CreatePersonalInputOccupation, json) as T;			case AccountEntity:
			return accountEntityFromJson(data as AccountEntity, json) as T;			case CheckUniqueInputEntity:
			return checkUniqueInputEntityFromJson(data as CheckUniqueInputEntity, json) as T;			case SignUpInputEntity:
			return signUpInputEntityFromJson(data as SignUpInputEntity, json) as T;			case SignUpInputDeviceInput:
			return signUpInputDeviceInputFromJson(data as SignUpInputDeviceInput, json) as T;			case UpdatePersonalInputEntity:
			return updatePersonalInputEntityFromJson(data as UpdatePersonalInputEntity, json) as T;			case UpdatePersonalInputInterest:
			return updatePersonalInputInterestFromJson(data as UpdatePersonalInputInterest, json) as T;			case UpdatePersonalInputJob:
			return updatePersonalInputJobFromJson(data as UpdatePersonalInputJob, json) as T;			case UpdatePersonalInputOccupation:
			return updatePersonalInputOccupationFromJson(data as UpdatePersonalInputOccupation, json) as T;			case ChangePasswordInputEntity:
			return changePasswordInputEntityFromJson(data as ChangePasswordInputEntity, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case BaseResultEntity:
			return baseResultEntityToJson(data as BaseResultEntity);			case PersonalEntity:
			return personalEntityToJson(data as PersonalEntity);			case PersonalInterest:
			return personalInterestToJson(data as PersonalInterest);			case PersonalJob:
			return personalJobToJson(data as PersonalJob);			case PersonalOccupation:
			return personalOccupationToJson(data as PersonalOccupation);			case PersonalConfigurationEntity:
			return personalConfigurationEntityToJson(data as PersonalConfigurationEntity);			case PersonalConfigurationInterest:
			return personalConfigurationInterestToJson(data as PersonalConfigurationInterest);			case PersonalConfigurationJob:
			return personalConfigurationJobToJson(data as PersonalConfigurationJob);			case PersonalConfigurationOccupation:
			return personalConfigurationOccupationToJson(data as PersonalConfigurationOccupation);			case CreatePersonalInputEntity:
			return createPersonalInputEntityToJson(data as CreatePersonalInputEntity);			case CreatePersonalInputInterest:
			return createPersonalInputInterestToJson(data as CreatePersonalInputInterest);			case CreatePersonalInputJob:
			return createPersonalInputJobToJson(data as CreatePersonalInputJob);			case CreatePersonalInputOccupation:
			return createPersonalInputOccupationToJson(data as CreatePersonalInputOccupation);			case AccountEntity:
			return accountEntityToJson(data as AccountEntity);			case CheckUniqueInputEntity:
			return checkUniqueInputEntityToJson(data as CheckUniqueInputEntity);			case SignUpInputEntity:
			return signUpInputEntityToJson(data as SignUpInputEntity);			case SignUpInputDeviceInput:
			return signUpInputDeviceInputToJson(data as SignUpInputDeviceInput);			case UpdatePersonalInputEntity:
			return updatePersonalInputEntityToJson(data as UpdatePersonalInputEntity);			case UpdatePersonalInputInterest:
			return updatePersonalInputInterestToJson(data as UpdatePersonalInputInterest);			case UpdatePersonalInputJob:
			return updatePersonalInputJobToJson(data as UpdatePersonalInputJob);			case UpdatePersonalInputOccupation:
			return updatePersonalInputOccupationToJson(data as UpdatePersonalInputOccupation);			case ChangePasswordInputEntity:
			return changePasswordInputEntityToJson(data as ChangePasswordInputEntity);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'BaseResultEntity':
			return BaseResultEntity().fromJson(json);			case 'PersonalEntity':
			return PersonalEntity().fromJson(json);			case 'PersonalInterest':
			return PersonalInterest().fromJson(json);			case 'PersonalJob':
			return PersonalJob().fromJson(json);			case 'PersonalOccupation':
			return PersonalOccupation().fromJson(json);			case 'PersonalConfigurationEntity':
			return PersonalConfigurationEntity().fromJson(json);			case 'PersonalConfigurationInterest':
			return PersonalConfigurationInterest().fromJson(json);			case 'PersonalConfigurationJob':
			return PersonalConfigurationJob().fromJson(json);			case 'PersonalConfigurationOccupation':
			return PersonalConfigurationOccupation().fromJson(json);			case 'CreatePersonalInputEntity':
			return CreatePersonalInputEntity().fromJson(json);			case 'CreatePersonalInputInterest':
			return CreatePersonalInputInterest().fromJson(json);			case 'CreatePersonalInputJob':
			return CreatePersonalInputJob().fromJson(json);			case 'CreatePersonalInputOccupation':
			return CreatePersonalInputOccupation().fromJson(json);			case 'AccountEntity':
			return AccountEntity().fromJson(json);			case 'CheckUniqueInputEntity':
			return CheckUniqueInputEntity().fromJson(json);			case 'SignUpInputEntity':
			return SignUpInputEntity().fromJson(json);			case 'SignUpInputDeviceInput':
			return SignUpInputDeviceInput().fromJson(json);			case 'UpdatePersonalInputEntity':
			return UpdatePersonalInputEntity().fromJson(json);			case 'UpdatePersonalInputInterest':
			return UpdatePersonalInputInterest().fromJson(json);			case 'UpdatePersonalInputJob':
			return UpdatePersonalInputJob().fromJson(json);			case 'UpdatePersonalInputOccupation':
			return UpdatePersonalInputOccupation().fromJson(json);			case 'ChangePasswordInputEntity':
			return ChangePasswordInputEntity().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'BaseResultEntity':
			return List<BaseResultEntity>();			case 'PersonalEntity':
			return List<PersonalEntity>();			case 'PersonalInterest':
			return List<PersonalInterest>();			case 'PersonalJob':
			return List<PersonalJob>();			case 'PersonalOccupation':
			return List<PersonalOccupation>();			case 'PersonalConfigurationEntity':
			return List<PersonalConfigurationEntity>();			case 'PersonalConfigurationInterest':
			return List<PersonalConfigurationInterest>();			case 'PersonalConfigurationJob':
			return List<PersonalConfigurationJob>();			case 'PersonalConfigurationOccupation':
			return List<PersonalConfigurationOccupation>();			case 'CreatePersonalInputEntity':
			return List<CreatePersonalInputEntity>();			case 'CreatePersonalInputInterest':
			return List<CreatePersonalInputInterest>();			case 'CreatePersonalInputJob':
			return List<CreatePersonalInputJob>();			case 'CreatePersonalInputOccupation':
			return List<CreatePersonalInputOccupation>();			case 'AccountEntity':
			return List<AccountEntity>();			case 'CheckUniqueInputEntity':
			return List<CheckUniqueInputEntity>();			case 'SignUpInputEntity':
			return List<SignUpInputEntity>();			case 'SignUpInputDeviceInput':
			return List<SignUpInputDeviceInput>();			case 'UpdatePersonalInputEntity':
			return List<UpdatePersonalInputEntity>();			case 'UpdatePersonalInputInterest':
			return List<UpdatePersonalInputInterest>();			case 'UpdatePersonalInputJob':
			return List<UpdatePersonalInputJob>();			case 'UpdatePersonalInputOccupation':
			return List<UpdatePersonalInputOccupation>();			case 'ChangePasswordInputEntity':
			return List<ChangePasswordInputEntity>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}